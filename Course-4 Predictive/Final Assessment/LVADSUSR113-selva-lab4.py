# -*- coding: utf-8 -*-
"""Lab4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZlSiTiaP3gF4NNfxiAbyddJPA3p1EOeE
"""

import pandas as pd

df_m=pd.read_csv('/content/social_network.csv')
df = df_m.iloc[:225,:]
df_test = df_m.iloc[225:,:]
df.info()

df.describe()

df.isnull().sum()

duplicates = df.duplicated(keep=False)
df['dup_bool'] = duplicates
print(df[df['dup_bool'] == True].count())
df.drop('dup_bool',axis=1,inplace=True)
df.head(1)

from matplotlib import pyplot as plt
import seaborn as sns
figsize = (12, 1.2 * len(df['account_status'].unique()))
plt.figure(figsize=figsize)
sns.violinplot(df, x='posting_activity', y='account_status', inner='stick', palette='Dark2')
sns.despine(top=True, right=True, bottom=True, left=True)



from sklearn.ensemble import IsolationForest
import warnings
warnings.filterwarnings('ignore')
import matplotlib.pyplot as plt

features = ["login_activity", "posting_activity", "social_connections"]

X = df[features]

model = IsolationForest()

model.fit(X)

y_pred = model.predict(X)
df["anomaly_score"] = model.decision_function(X)

anomalies = df.loc[df["anomaly_score"] < 0]

x=df_test[["login_activity", "posting_activity", "social_connections"]]
df_values=x.values

find=df_values

result=[]
for i in find:
  z=model.predict([i])
  if z==[1]:
    result.append('Not Anomaly')
  elif z==[-1]:
    result.append('Anomaly')

df_test['Anomaly']=result
print(df_test)

plt.scatter(df["social_connections"], df["anomaly_score"], label="Not Anomaly")
plt.scatter(anomalies["social_connections"], anomalies["anomaly_score"], color="r", label="Anomaly")
plt.xlabel("Social Connections")
plt.ylabel("anomaly_score")
plt.legend()
plt.show()

df_test.head()